name: Build and Deploy code

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build: 
    environment:
      name: Testing
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
      VUE_APP_API_HOST: ${{secrets.VUE_APP_API_HOST}}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2

      - name: Install python version 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: update pip
        run: python -m pip install --upgrade pip

      - name: install Python dependencies
        run: pip install -r requirements.txt

      - name: test with pytest
        run: |
          pip install pytest
          pytest

      - name: Install Node.js and npm
        uses: actions/setup-node@v2
        with:
          node-version: '20'  # Adjust the Node.js version as per your project requirements

      - name: Install Node.js dependencies
        run: npm install  # This installs all dependencies listed in package.json
      
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: production

    steps:
      - name: Deploying to the Production
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.PROD_HOST}}
          username: ${{secrets.PROD_USERNAME}}
          password: ${{secrets.PROD_PASSWORD}}
          script: |
            cd FastAPI/src
            git pull
            echo ${{secrets.PROD_PASSWORD}} | sudo -S systemctl restart api